package jp.ddhost.ofb_core;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.tools.zip.ZipUtil;

import net.lingala.zip4j.exception.ZipException;

//import org.apache.tools.zip.ZipEntry;
//import org.apache.tools.zip.ZipOutputStream;

public class fileCopier{

	/*
	public Boolean fileCompressor(String filePath){

		ZipOutputStream outZip = null;
        File baseFile = new File(filePath);
        try {
            // ZIPファイル出力オブジェクト作成
            outZip = new ZipOutputStream(new FileOutputStream(baseFile));
            // 圧縮ファイルリストのファイルを連続圧縮
            for ( int i = 0 ; i < fileList.size() ; i++ ) {
                // ファイルオブジェクト作成
                File file = new File((String)fileList.get(i));
                archive(outZip, baseFile, file, file.getName(), "Shift_JIS");
            }
        } catch ( Exception e ) {
            // ZIP圧縮失敗
            return false;
        } finally {
            // ZIPエントリクローズ
            if ( outZip != null ) {
                try { outZip.closeEntry(); } catch (Exception e) {}
                try { outZip.flush(); } catch (Exception e) {}
                try { outZip.close(); } catch (Exception e) {}
            }
        }
        return true;
	}*/

	public Boolean fileCompressor(){
		try {
			new zipTool().zip("/Users/hoge/file", "/Users/hoge/file.zip", "password");
		} catch (ZipException | IOException | CloneNotSupportedException e) {
			// TODO 自動生成された catch ブロック
			e.printStackTrace();
			System.out.println(e.getMessage());
			return false;
		}
		return true;
	}


}