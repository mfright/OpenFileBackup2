package jp.ddhost.ofb_core;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class xmlLoader2{

	/// Load contents.xml
	static ArrayList loadXml(){

		// 読み込んだ内容はここへ保管
		ArrayList<content> contents = new ArrayList();

		try{
			String path = new File(".").getAbsoluteFile().getParent();

			  // contents.xmlをオープン
			  File file = new File(path + "\\"+"contents.xml");
			  BufferedReader br = new BufferedReader(new FileReader(file));

			  /*
			  // タグを探して読み込む。
			  String str = br.readLine();
			  while(str != null){
				  if(str.indexOf("<source>")>-1){
					  loadedContent.source = str.substring(str.indexOf("<source>")+8, str.indexOf("</source>"));
				  }else if(str.indexOf("<destination>")>-1){
					  loadedContent.destination = str.substring(str.indexOf("<destination>")+13, str.indexOf("</destination>"));
				  }else if(str.indexOf("<deleted>")>-1){
					  loadedContent.deleted = str.substring(str.indexOf("<deleted>")+9, str.indexOf("</deleted>"));
				  }else if(str.indexOf("<deletedsafe>true</deletedsafe>")>-1){
					  loadedContent.deletedsafe = true;
				  }else if(str.indexOf("<encrypt>true</encrypt>")>-1){
					  loadedContent.encryption = true;
				  }else if(str.indexOf("<encryptpassword>")>-1){
					  loadedContent.encryptPassword = str.substring(str.indexOf("<encryptpassword>")+17, str.indexOf("</encryptpassword>"));
				  }else if(str.indexOf("<exclude>")>-1){
					  loadedContent.excludeFilePaths.add( str.substring(str.indexOf("<exclude>")+9, str.indexOf("</exclude>")) );
				  }

				  str = br.readLine();
			  }*/



			  // 全行を読み込み,各contentのfullBufferに保管
			  content contentBuffer = new content();
			  String tmpBuffer = br.readLine();
			  while(tmpBuffer != null){

				  contentBuffer.fullBuffer += tmpBuffer;

				  if(tmpBuffer.indexOf("</content>") > -1){
					  contents.add(contentBuffer);
					  contentBuffer = new content();
				  }

				  tmpBuffer = br.readLine();
			  }







			  /*
			  // <content>要素の数を数える。
			  int cursor = 0;
			  int count = 0;
			  int foundPoint = -1;
			  while(cursor<fullBuffer.length()){
				  foundPoint = fullBuffer.indexOf("<content>",cursor);

				  if( foundPoint > 0){
					  count++;
					  cursor = foundPoint+1;
				  }else{
					  break;
				  }
			  }


			  // <content>要素が０個なら処理終了
			  if(count<1){
				  System.out.println("ERROR: No <content> elements found!");
				  return null;
			  } */







			// contents.xmlをクローズ
			  br.close();

		}catch(FileNotFoundException e){
		  System.out.println(e);
		}catch(IOException e){
		  System.out.println(e);
		}

		return loadedContent;
	}
}